{"version":3,"sources":["components/Cell.module.css","Constants.js","styles/index.js","components/ScoreBox.js","components/Cell.js","components/Board.js","utils.js","reducer/index.js","App.js","serviceWorker.js","middlewares/logger.js","saga.js","index.js"],"names":["module","exports","mark","bounce","disappear","colors","ScoreBox","props","react_default","a","createElement","style","width","backgroundColor","padding","score","Cell","data","choose","target","onClick","color","undefined","height","display","alignItems","justifyContent","future","borderRadius","className","styles","remove","position","Board","content","chosen","margin","map","row","rindex","key","cell","cindex","x","y","addAmount","lineSize","emptyContent","i","j","push","addNewBall","max","count","total","length","col","Math","random","floor","cloneContent","Object","objectSpread","findPath","fromX","fromY","toX","toY","startNode","toNode","distances","visited","prev","pq","PriorityQueue","comparator","b","d","queue","node","forEach","Infinity","_loop2","currNode","dequeue","splits","split","parseInt","retval","neighbor","getNeighbor","alt","_loop","prevNode","tmpPath","reverse","NEW_GAME","CHOOSE","UNCHOOSE","TARGET","MOVE","RELOCATE_FUTURE","NEXT","ADD_FUTURE","MARK_REMOVE_BALLS","REMOVE_BALLS","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","newGame","bind","assertThisInitialized","newContent","_addNewBall","_addNewBall2","dispatch","type","_this$props","flexDirection","fontSize","boxShadow","concat","Component","connect","state","chosenX","chosenY","Boolean","window","location","hostname","match","logger","_ref","getState","next","action","console","log","move","rootSaga","path","currentX","currentY","nextX","nextY","_i","currentContent","obj","regenerator_default","wrap","_context","take","sent","put","delay","select","futures","abrupt","stop","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","arguments","k","startPoints","point","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84525db3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mark\":\"Cell_mark__10kVn\",\"bounce\":\"Cell_bounce__2wI6L\",\"disappear\":\"Cell_disappear__14dSm\"};","export const colors = [\r\n  '#f44336',\r\n  '#2196f3',\r\n  '#4caf50',\r\n  '#ffeb3b',\r\n  '#9c27b0',\r\n  '#795548',\r\n  '#00bcd4'\r\n]\r\n\r\nexport const width = 9\r\nexport const height = 9\r\n\r\nexport const addAmount = 3\r\nexport const lineSize = 5\r\n\r\nexport const emptyContent = []\r\nfor(let i = 0; i < height; i++) {\r\n  const row = []\r\n  for(let j = 0; j < width; j++) {\r\n    row.push({})\r\n  }\r\n  emptyContent.push(row)\r\n}","export const colors = {\r\n  grey: '#cfcfcf',\r\n  \r\n}","import React from 'react'\r\nimport {colors} from '../styles'\r\n\r\nexport default function(props) {\r\n  return <div style={{width: '100%', backgroundColor: colors.grey, padding: '5px'}}>\r\n    Score: {props.score}\r\n  </div>\r\n}","import React from 'react'\r\nimport { colors } from '../styles'\r\nimport styles from './Cell.module.css'\r\n\r\nexport default function (props) {\r\n  const { data, mark, choose, target } = props\r\n  return <div onClick={data.color ? undefined : target} style={{\r\n    width: '40px', height: '40px', display: 'flex',\r\n    alignItems: 'center', 'justifyContent': 'center', backgroundColor: colors.grey\r\n  }}>\r\n    {\r\n      data.future &&\r\n      <div style={{ width: '8px', height: '8px', borderRadius: '50%', backgroundColor: data.future.color }}></div>\r\n    }\r\n    {\r\n      data.color &&\r\n      <div onClick={choose} className={(mark ? styles['mark'] : '') + ' ' + (data.remove ? styles['disappear'] : '')}\r\n        style={{ width: '30px', height: '30px', borderRadius: '50%', backgroundColor: data.color, position: 'relative' }}></div>\r\n    }\r\n  </div>\r\n}","import React from 'react'\r\nimport Cell from './Cell'\r\n\r\nexport default function (props) {\r\n  const { content, choose, target, chosen } = props\r\n  return <table style={{ margin: '15px' }}>\r\n    <tbody>\r\n      {\r\n        content.map((row, rindex) => {\r\n          return <tr key={rindex}>{\r\n            row.map((cell, cindex) => {\r\n              const mark = cindex === chosen.x && rindex === chosen.y\r\n              return <td key={cindex}>\r\n                <Cell data={cell}\r\n                  target={() => target(chosen.x, chosen.y, cindex, rindex, content)}\r\n                  choose={() => choose(cindex, rindex)} mark={mark} />\r\n              </td>\r\n            })\r\n          }</tr>\r\n        })\r\n      }\r\n    </tbody>\r\n  </table>\r\n}","import { colors, lineSize } from './Constants'\r\nimport PriorityQueue from 'js-priority-queue'\r\n\r\nexport function getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport function addNewBall(content) {\r\n  let count = 0\r\n  const total = content.length * content[0].length\r\n  for (let row = 0; row < content.length; row++) {\r\n    for (let col = 0; col < content[0].length; col++) {\r\n      const cell = content[row][col]\r\n      if (cell.future || cell.color) {\r\n        count++;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (count === total) {\r\n    return null\r\n  }\r\n\r\n  while (true) {\r\n    for (let row = 0; row < content.length; row++) {\r\n      for (let col = 0; col < content[0].length; col++) {\r\n        const cell = content[row][col]\r\n        if (!cell.future && !cell.color) {\r\n          if (Math.random() < 1 / (total - count)) {\r\n            return { x: col, y: row, color: colors[getRandomInt(colors.length)] }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function cloneContent(content) {\r\n  const newContent = content.map(row => row.map(cell => ({ ...cell })))\r\n  return newContent\r\n}\r\n\r\nexport function findPath(fromX, fromY, toX, toY, content) {\r\n  const startNode = fromX + '-' + fromY\r\n  const toNode = toX + '-' + toY\r\n  let distances = {};\r\n  const visited = {}\r\n\r\n  // Stores the reference to previous nodes\r\n  let prev = {};\r\n  let pq = new PriorityQueue({ comparator: function (a, b) { return a.d - b.d } });\r\n\r\n  // Set distances to all nodes to be infinite except startNode\r\n  distances[startNode] = 0;\r\n  pq.queue({ node: startNode, d: 0 });\r\n  content.forEach((row, rindex) => {\r\n    row.forEach((cell, cindex) => {\r\n      if (rindex !== fromY || cindex !== fromX) {\r\n        distances[cindex + '-' + rindex] = Infinity\r\n      }\r\n    })\r\n  })\r\n\r\n  while (pq.length > 0) {\r\n    let item = pq.dequeue();\r\n    let currNode = item.node;\r\n    if (visited[currNode]) {\r\n      continue\r\n    }\r\n    visited[currNode] = true\r\n    if (currNode === toNode) {\r\n      break\r\n    }\r\n\r\n    getNeighbor(currNode, content).forEach(neighbor => {\r\n      if (visited[neighbor] === undefined) {\r\n        const alt = distances[currNode] + 1\r\n        if (alt < distances[neighbor]) {\r\n          distances[neighbor] = alt;\r\n          prev[neighbor] = currNode\r\n          pq.queue({ node: neighbor, d: alt })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  if (visited[toNode] === undefined) {\r\n    return undefined\r\n  }\r\n  let prevNode = prev[toNode]\r\n  const tmpPath = []\r\n  if (toNode === startNode) {\r\n    return tmpPath\r\n  }\r\n  tmpPath.push(toNode)\r\n  while (prevNode !== startNode) {\r\n    tmpPath.push(prevNode)\r\n    prevNode = prev[prevNode]\r\n  }\r\n\r\n  return tmpPath.reverse()\r\n}\r\n\r\nfunction getNeighbor(node, content) {\r\n  const splits = node.split('-')\r\n  const x = parseInt(splits[0], 10)\r\n  const y = parseInt(splits[1], 10)\r\n\r\n  const retval = []\r\n\r\n  if (x > 0) {\r\n    const neighbor = content[y][x - 1]\r\n    if (neighbor.color === undefined || neighbor.future) {\r\n      retval.push((x - 1) + '-' + y)\r\n    }\r\n  }\r\n  if (y > 0) {\r\n    const neighbor = content[y - 1][x]\r\n    if (neighbor.color === undefined || neighbor.future) {\r\n      retval.push(x + '-' + (y - 1))\r\n    }\r\n  }\r\n  if (x < content[0].length - 1) {\r\n    const neighbor = content[y][x + 1]\r\n    if (neighbor.color === undefined || neighbor.future) {\r\n      retval.push((x + 1) + '-' + y)\r\n    }\r\n  }\r\n  if (y < content.length - 1) {\r\n    const neighbor = content[y + 1][x]\r\n    if (neighbor.color === undefined || neighbor.future) {\r\n      retval.push(x + '-' + (y + 1))\r\n    }\r\n  }\r\n\r\n  return retval\r\n}\r\n\r\nexport function scanForLines(x, y, content) {\r\n  const retval = []\r\n\r\n  const color = content[y][x].color\r\n  // vertical\r\n  let top = y\r\n  for(let i = y - 1; i >= 0; i++) {\r\n    if (content[i][x].color === color) {\r\n      top = i\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n  let bottom = y\r\n  for(let i = y + 1; i < content.length; i++) {\r\n    if (content[i][x].color === color) {\r\n      bottom = i\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n  if(bottom - top + 1 >= lineSize) {\r\n    retval.push({start: {x, y: top}, end: {x, y: bottom}})\r\n  }\r\n\r\n  // horizontal\r\n  let left = x\r\n  for(let i = x - 1; i >= 0; i++) {\r\n    if (content[y][i].color === color) {\r\n      left = i\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n  let right = x\r\n  for(let i = x + 1; i < content[0].length; i++) {\r\n    if (content[y][i].color === color) {\r\n      right = i\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n  if(right - left + 1 >= lineSize) {\r\n    retval.push({start: {y, x: left}, end: {y, x: right}})\r\n  }\r\n}","import { cloneContent } from '../utils'\r\nimport { lineSize } from '../Constants';\r\n\r\nconst NEW_GAME = 'newGame'\r\nexport const CHOOSE = 'choose'\r\nexport const UNCHOOSE = 'unchoose'\r\nexport const TARGET = 'target'\r\nexport const MOVE = 'move'\r\nexport const RELOCATE_FUTURE = 'relocateFuture'\r\nexport const NEXT = 'next'\r\nexport const ADD_FUTURE = 'addFuture'\r\nexport const MARK_REMOVE_BALLS = 'markRemoveBalls'\r\nexport const REMOVE_BALLS = 'removeBalls'\r\n\r\nexport function newGame(content, count) {\r\n  return {\r\n    type: NEW_GAME,\r\n    content,\r\n    count\r\n  }\r\n}\r\n\r\nexport function choose(x, y) {\r\n  return {\r\n    type: CHOOSE,\r\n    x, y\r\n  }\r\n}\r\n\r\nexport function target(fromX, fromY, toX, toY, content) {\r\n  return {\r\n    type: TARGET,\r\n    fromX, fromY, toX, toY, content\r\n  }\r\n}\r\n\r\nexport function relocateFuture(fromX, fromY, x, y) {\r\n  return {\r\n    type: RELOCATE_FUTURE,\r\n    fromX, fromY, x, y\r\n  }\r\n}\r\n\r\nexport function addFuture(futures) {\r\n  return {\r\n    type: ADD_FUTURE,\r\n    futures\r\n  }\r\n}\r\n\r\nexport default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case NEW_GAME:\r\n      return { content: action.content, count: action.count, score: 0 }\r\n    case CHOOSE:\r\n      return { ...state, chosenX: action.x, chosenY: action.y }\r\n    case UNCHOOSE:\r\n      return { ...state, chosenX: undefined, chosenY: undefined }\r\n    case MOVE: {\r\n      const content = cloneContent(state.content)\r\n      content[action.toY][action.toX].color = content[action.fromY][action.fromX].color\r\n      content[action.fromY][action.fromX].color = undefined\r\n      return {\r\n        ...state,\r\n        content\r\n      }\r\n    }\r\n    case RELOCATE_FUTURE: {\r\n      if (state.content[action.y][action.x].future) {\r\n        const content = cloneContent(state.content)\r\n        content[action.fromY][action.fromX].future = content[action.y][action.x].future\r\n        content[action.y][action.x].future = undefined\r\n        return {\r\n          ...state,\r\n          content\r\n        }\r\n      }\r\n      return state\r\n    }\r\n    case NEXT: {\r\n      let count = state.count\r\n      const content = cloneContent(state.content)\r\n      for (let i = 0; i < content.length; i++) {\r\n        for (let j = 0; j < content[0].length; j++) {\r\n          const cell = content[i][j]\r\n          if (cell.future) {\r\n            cell.color = cell.future.color\r\n            cell.future = undefined\r\n            count++\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        count, content\r\n      }\r\n    }\r\n    case ADD_FUTURE: {\r\n      const content = cloneContent(state.content)\r\n      for (let i = 0; i < action.futures.length; i++) {\r\n        const future = action.futures[i]\r\n        content[future.y][future.x] = { future: { color: future.color } }\r\n      }\r\n      return {\r\n        ...state,\r\n        content\r\n      }\r\n    }\r\n    case MARK_REMOVE_BALLS: {\r\n      const content = state.content\r\n      const newContent = cloneContent(state.content)\r\n      let count = state.count\r\n      let score = state.score\r\n\r\n      // horizontal\r\n      for (let i = 0; i < content.length; i++) {\r\n        let length = 1\r\n        for (let j = 1; j < content[0].length; j++) {\r\n          if (content[i][j].color && content[i][j].color === content[i][j - 1].color) {\r\n            length++\r\n\r\n            if (length >= lineSize) {\r\n              if (j + 1 === content[0].length || content[i][j + 1].color !== content[i][j].color) {\r\n                for (let k = 0; k < length; k++) {\r\n                  newContent[i][j - k].remove = true\r\n                  count--\r\n                  score++\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            length = 1\r\n          }\r\n        }\r\n      }\r\n\r\n      // vertical\r\n      for (let i = 0; i < content[0].length; i++) {\r\n        let length = 1\r\n        for (let j = 1; j < content.length; j++) {\r\n          if (content[j][i].color && content[j][i].color === content[j - 1][i].color) {\r\n            length++\r\n\r\n            if (length >= lineSize) {\r\n              if (j + 1 === content.length || content[j + 1][i].color !== content[j][i].color) {\r\n                for (let k = 0; k < length; k++) {\r\n                  newContent[j - k][i].remove = true\r\n                  count--\r\n                  score++\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            length = 1\r\n          }\r\n        }\r\n      }\r\n\r\n      // down diagonal\r\n      let startPoints = []\r\n      for (let i = 0; i < content.length; i++) {\r\n        startPoints.push({ x: 0, y: i })\r\n      }\r\n      for (let i = 1; i < content[0].length; i++) {\r\n        startPoints.push({ x: i, y: 0 })\r\n      }\r\n      for (let i = 0; i < startPoints.length; i++) {\r\n        const point = startPoints[i]\r\n        let length = 1\r\n        for (let j = 1; point.x + j < content[0].length && point.y + j < content.length; j++) {\r\n          if (content[point.y + j][point.x + j].color &&\r\n            content[point.y + j][point.x + j].color === content[point.y + j - 1][point.x + j - 1].color) {\r\n            length++\r\n\r\n            if (length >= lineSize) {\r\n              if (point.x + j + 1 === content[0].length || point.y + j + 1 === content.length ||\r\n                content[point.y + j][point.x + j].color !== content[point.y + j + 1][point.x + j + 1].color) {\r\n                for (let k = 0; k < length; k++) {\r\n                  newContent[point.y + j - k][point.x + j - k].remove = true\r\n                  count--\r\n                  score++\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            length = 1\r\n          }\r\n        }\r\n      }\r\n\r\n      // up diagonal\r\n      startPoints = []\r\n      for(let i = 0; i < content.length; i++) {\r\n        startPoints.push({x: 0, y: i})\r\n      }\r\n      for (let i = 1; i < content[0].length; i++) {\r\n        startPoints.push({ x: i, y: content[0].length - 1 })\r\n      }\r\n      for (let i = 0; i < startPoints.length; i++) {\r\n        const point = startPoints[i]\r\n        let length = 1\r\n        for (let j = 1; point.x + j < content[0].length && point.y - j >= 0; j++) {\r\n          if (content[point.y - j][point.x + j].color &&\r\n            content[point.y - j][point.x + j].color === content[point.y - j + 1][point.x + j - 1].color) {\r\n            length++\r\n\r\n            if (length >= lineSize) {\r\n              if (point.x + j + 1 === content[0].length || point.y - j === 0 ||\r\n                content[point.y - j][point.x + j].color !== content[point.y - j - 1][point.x + j + 1].color) {\r\n                for (let k = 0; k < length; k++) {\r\n                  newContent[point.y - j + k][point.x + j - k].remove = true\r\n                  count--\r\n                  score++\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            length = 1\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        content: newContent,\r\n        count,\r\n        score\r\n      }\r\n    }\r\n    case REMOVE_BALLS: {\r\n      const newContent = cloneContent(state.content)\r\n      newContent.forEach(row => {\r\n        row.forEach(cell => {\r\n          if (cell.remove) {\r\n            cell.color = undefined\r\n            cell.remove = undefined\r\n          }\r\n        })\r\n      })\r\n      return {\r\n        ...state,\r\n        content: newContent\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport ScoreBox from './components/ScoreBox'\nimport Board from './components/Board'\nimport {emptyContent, addAmount} from './Constants'\nimport {addNewBall, cloneContent} from './utils'\nimport {newGame, choose, target} from './reducer'\nimport {colors} from './styles'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.newGame = this.newGame.bind(this)\n    this.choose = this.choose.bind(this)\n    this.target = this.target.bind(this)\n  }\n\n  newGame() {\n    const newContent = cloneContent(emptyContent)\n\n    for(let i = 0; i < addAmount; i++) {\n      const {x, y, color} = addNewBall(newContent)\n      newContent[y][x].color = color\n    }\n\n    for(let i = 0; i < addAmount; i++) {\n      const {x, y, color} = addNewBall(newContent)\n      newContent[y][x].future = {color}\n    }\n\n    this.props.dispatch(newGame(newContent, addAmount))\n  }\n\n  choose(x, y) {\n    this.props.dispatch(choose(x, y))\n  }\n\n  target(fromX, fromY, toX, toY, content) {\n    this.props.dispatch(target(fromX, fromY, toX, toY, content))\n  }\n\n  render() {\n    const { score, content, chosen } = this.props;\n\n    return (\n      <div style={{ width: '100%', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n        <div style={{ padding: '30px', borderRadius: '10px', backgroundColor: 'white', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <button style={{ padding: '5px', borderRadius: '5px', fontSize: '17px' }} onClick={this.newGame}>New game</button>\n          <div style={{ height: '10px' }} > </div>\n          <ScoreBox score={score} />\n        </div>\n        <div style={{boxShadow: `0 0 5px 2px ${colors.grey}` }}>\n        <Board content={content} choose={this.choose} target={this.target} chosen={chosen} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    score: state.score || 0,\n    content: state.content || emptyContent,\n    chosen: {x: state.chosenX, y: state.chosenY}\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const logger = ({ getState, dispatch }) => next => action => {\r\n  console.log('Action', action);\r\n  next(action);\r\n  console.log('State', getState());\r\n};\r\n\r\nexport default logger;","import { all, take, put, takeLatest, select } from 'redux-saga/effects'\r\nimport { delay } from 'redux-saga'\r\nimport { TARGET, MOVE, CHOOSE, RELOCATE_FUTURE, NEXT, ADD_FUTURE, UNCHOOSE, MARK_REMOVE_BALLS, REMOVE_BALLS } from './reducer'\r\nimport { findPath, addNewBall } from './utils'\r\nimport { addAmount } from './Constants';\r\n\r\nfunction* target() {\r\n  while (true) {\r\n    const action = yield take(TARGET)\r\n    const path = findPath(action.fromX, action.fromY, action.toX, action.toY, action.content)\r\n    let currentX = action.fromX\r\n    let currentY = action.fromY\r\n    if (path !== undefined) {\r\n      for (let i = 0; i < path.length; i++) {\r\n        const node = path[i].split('-')\r\n        const nextX = parseInt(node[0], 10)\r\n        const nextY = parseInt(node[1], 10)\r\n        yield put({ type: MOVE, fromX: currentX, fromY: currentY, toX: nextX, toY: nextY })\r\n        yield delay(20)\r\n\r\n        currentX = nextX\r\n        currentY = nextY\r\n      }\r\n      yield put({ type: UNCHOOSE })\r\n      yield put({ type: RELOCATE_FUTURE, fromX: action.fromX, fromY: action.fromY, x: action.toX, y: action.toY })\r\n      yield put({ type: NEXT })\r\n      yield delay(50)\r\n      \r\n      yield put({ type: MARK_REMOVE_BALLS})\r\n      yield delay(100)\r\n      yield put({ type: REMOVE_BALLS})\r\n\r\n      for (let i = 0; i < addAmount; i++) {\r\n        const currentContent = yield select((state) => state.content)\r\n\r\n        const obj = addNewBall(currentContent)\r\n        if (obj !== null) {\r\n          yield put({ type: ADD_FUTURE, futures: [obj] })\r\n        }\r\n      }\r\n\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction* move() {\r\n  yield takeLatest(CHOOSE, target)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([move()])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducer'\nimport { Provider } from 'react-redux'\nimport logger from './middlewares/logger'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './saga'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, {}, applyMiddleware(logger, sagaMiddleware))\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}